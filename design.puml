@startuml State Management Design

StateA --|> State
State <|-- StateB
ExtendedContext --|> Context

interface Context {
    -State _currentState
    +void changeState() / setState()
    +State getState()
    +void logState()
}

class ExtendedContext {
    -State _currentState
    +void changeState() / setState()
    +State getState()
    +void method1()
    +void method2()
    +void method3()
    +void method4()
}


abstract class State {
    -Context _context
    +void {abstract} method1()
    +void {abstract} method2()
    +void {abstract} method3()
    +void {abstract} method4()
}

class StateA {
    -Context _context
    +void method1()
    +void method2()
    +void method3()
    +void method4()
}

class StateB {
    -Context _context
    +void method1()
    +void method2()
    +void method3()
    +void method4()
}

enum StateCollection {
    State StateA
    State StateB
}

@enduml